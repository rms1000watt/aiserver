<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example FltVector uniqueInsert 004</Title>
		<Template>Example</Template>
		<FunctionKeywords>uniqueInsert</FunctionKeywords>
		<TypeKeywords>FltVector  Integer</TypeKeywords>
		<RelatedFunctions>insert binarySearch binaryInsert sort</RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords>binary insert structure sort</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[  This example shows how the <b>uniqueInsert</b> function works when a new value

                  is inserted in the Vector.

                  


	]]></Description>
	<Syntax>
  	   <Expression><![CDATA[ <sc>(setq X #(float| 5.456699848175 3.141592025757 ))         </sc>]]></Expression>
        <Note><![CDATA[Insert a new value in the Vector.]]></Note>
        <Returns><![CDATA[#&#60FltVector 123456&#62 ]]></Returns>
        <Expression><![CDATA[ <sc>(uniqueInsert X 10.2343 )       </sc>]]></Expression>
        <Note><![CDATA[The new value is inserted at the end of the Vector.]]></Note>
        <Returns><![CDATA[2]]></Returns>
        <Expression><![CDATA[ <sc>(display X )       </sc>]]></Expression>
        <Note><![CDATA[The modified Vector is displayed. ]]></Note>
        <Returns><![CDATA[#(float| 5.456699848175 3.141592025757 10.23429965973 )]]></Returns>
        <Hints><![CDATA[The <b>uniqueInsert</b> function always inserts a new value at the end, since a 


                Vector is by default not sorted. If sort order is needed, use the <b>sort</b>
                function and insert new objects by calling the <b>binaryInsert</b> function.

        ]]></Hints>
   </Syntax>
</Example>
