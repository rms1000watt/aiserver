<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example CpxVector append 013</Title>
		<Template>Example</Template>
		<FunctionKeywords>append</FunctionKeywords>
		<TypeKeywords>CpxVector</TypeKeywords>
		<RelatedFunctions>new replace rept</RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords>append concatenate complex vector </HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[  This example takes 2 existing   Vectors and appends 
                  the values of each   Vector.  The result is placed in a new   Vector.

	]]></Description>
	<Syntax>
  	    <Expression><![CDATA[ <sc>(setq X (new Vector: complex: 1 1.0 2.0))      </sc>]]></Expression>
        <Note><![CDATA[Defines the first Complex Vector. ]]></Note>
        <Returns><![CDATA[#&#60CpxVector 123456&#62 ]]></Returns>
        <Expression><![CDATA[ <sc>(append X #c3.0+4.0i)       </sc>]]></Expression>
        <Note><![CDATA[Adds a Complex Number to the Vector]]></Note>
        <Returns><![CDATA[#&#60CpxVector 234567&#62   ]]></Returns>
        <Expression><![CDATA[ <sc>(display #&#60CpxVector 234567&#62 )       </sc>]]></Expression>  
        <Note><![CDATA[Displays the newly appended Vector. Vector X remains unchanged.]]></Note> 
        <Returns><![CDATA[#&#60CpxVector 234567&#62   ]]></Returns>
        <Expression><![CDATA[ <sc>(setq Y #(cpx| 3.0 4.0 5.0 6.0))         </sc>]]></Expression>
        <Note><![CDATA[Defines another Vector.]]></Note>
        <Returns><![CDATA[#&#60CpxVector 345678&#62   ]]></Returns>
        <Expression><![CDATA[ <sc>(setq W (append X Y ))      </sc>]]></Expression>
        <Note><![CDATA[none]]></Note>
        <Returns><![CDATA[#&#60CpxVector 456789&#62   ]]></Returns>
        <Expression><![CDATA[ <sc>(display W )       </sc>]]></Expression>
        <Note><![CDATA[The new Vector contains the value sof Vectors X and Y.]]></Note>
        <Returns><![CDATA[#(cpx| #c1.0+2.0i #c3.0+4.0i #c5.0+6.0i )]]></Returns>
        <Hints><![CDATA[<p>Append automagically reallocates enough contiguous space in the heap to 
             hold the new vector. If necessary, the contents of the existing heap area is moved 
             to the new location. The garbage collector comes along later to clean up the 
             abandoned object. </p>
             <p>Amazingly, the relocation of an object in the heap does not change the 
              contents of the virtual machine container; thus, no dynamic fixup of all the 
              pointers into the heap is required. </p>]]></Hints>
   </Syntax>
</Example>
