<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example ShortVector send 017</Title>
		<Template>Example</Template>
		<FunctionKeywords>send</FunctionKeywords>
		<TypeKeywords>ShortVector Dictionary</TypeKeywords>
		<RelatedFunctions>addMethod defMethod methodsOf</RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords>method message messageName</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[ This example first defines the method <b>addValues</b>. It then invokes the







                  <b>addMethod</b> function to add the method in the Methods Dictionary.  







                   The method <b>Increment</b> will be then  invoked by  the 







                  <b>send</b> function calling the message in the <b>Dictionary</b> Methods Dictionary.







   	]]></Description>
   <Syntax>
   <Expression><![CDATA[
<sc> (addMethod  ShortVector:  addValues:  (lambda  (s)  (apply +  s)))</sc>
]]></Expression>
   <Note><![CDATA[ Add a method named addValues which will add the values of all the fields in a Vector.]]></Note>
   <Returns><![CDATA[&#60Dictionary 123456&#62 ]]></Returns>
   <Expression><![CDATA[<sc>(define monthlyBills #(short| 400  2100 100 600) )    </sc> ]]></Expression>
   <Note><![CDATA[ Define a Vector that contains the amount of checks written for the month.]]></Note>
   <Returns><![CDATA[#&#60ShortVector 123456&#62]]></Returns>
   <Expression><![CDATA[<sc>(send  addValues:  monthlyBills)        </sc> ]]></Expression>
   <Note><![CDATA[ Invoke the method named addValues to compute the total amount checks written for the month.]]></Note>
   <Returns><![CDATA[3200]]></Returns>
   <Expression><![CDATA[<sc>(addValues:  monthlyBills)           </sc> ]]></Expression>
   <Note><![CDATA[ The method can be invoked simply by name:





   ]]></Note>
   <Returns><![CDATA[3200]]></Returns>
   <Hints><![CDATA[<p>Dissecting the <b>send</b> command involves understanding the methods dictionary 





          of any Analytic Information Server type. In general the <b>send</b> command is translated 





          as a reference into the methods dictionary:</p>
          <p><b>((ref (methodsOf (type object)) methodName  object))</b></p>
          <p> The statement : </p>
          <p><b>(send addValues: monthlyBills) </b> </p>
          <p>is translated into </p>
          <p><b>((ref (methodsOf (type monthlyBills)) addValues: ) monthlyBills) </b></p>
          <p> Each statement segment results in: </p>
          <table>
             <tr><td width=60%><b> (type monthlyBills)        </b></td>
                  <td width=40%>Returns: <b> IntVector  </b></td></tr>
             <tr><td width=60%><b>  (methodsOf (ShortVector:))    </b></td>
                  <td width=40%>Returns: <b> #&#60Dictionary 123456&#62  </b></td></tr>
             <tr><td width=60%><b> (ref (#&#60Dictionary 123456&#62) addValues: )    </b></td>
                  <td width=40%>Returns: <b> #&#60Lambda 123456&#62  </b></td></tr>
             <tr><td width=60%><b> ( #&#60Lambda 123456&#62  monthlyBills)       </b></td>
                  <td width=40%>Returns: <b> 3200 </b></td></tr>
          </table>
 ]]></Hints>
   </Syntax>
</Example>
