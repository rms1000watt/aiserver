<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>cmod</Title>
		<FunctionName>cmod</FunctionName>
		<FunctionType>Builtin</FunctionType>
		<ArgumentTypes>Character Integer</ArgumentTypes>
		<DataType>Character</DataType>
		<RelatedFunctions>cadd cdiv cmul</RelatedFunctions>
        <RelatedVMInstructions> vmcadd vmcdiv vmcdivr vmcmul vmcdiv  </RelatedVMInstructions> 
		<HumanKeywords> character arithmetic mod remainder division operators </HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>cmod</b> Function divides two Characters and returns the remainder expressed as a Character.   </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		<p>The <b>cmod</b> function divides two Characters and returns the remainder expressed as a 

         Character.  The <b>cmod</b> function does not perform type checking or type conversion on 

         the operands. Both operands are treated as integers during the mod operation.  
        </p>
        ]]></Overview>
        <Usage><![CDATA[
        <p>The <b>cmod</b> built-in function is used to determine if a Character will divide 

         evenly into another Character (the remainder will be zero in this case).  

        </p>
         ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[  (cmod char1 char2 ... )]]></Expression>
		<Argument>
		  <Name>char1</Name>
		  <Note><![CDATA[
		  <p>The Character to be divided</p>
          ]]></Note>
		  <AISTypes>Character</AISTypes>
		</Argument>
		<Argument>
		  <Name>char2</Name>
		  <Note><![CDATA[
		  <p>The Character divisors.</p>
          ]]></Note>
		  <AISTypes>Character</AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>The remainder after division. The result is expressed as a Character.

	    </p>
	    ]]></Return>
	</Syntax>
</Function>
