<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example Function send 014</Title>
		<Template>Example</Template>
		<FunctionKeywords>send</FunctionKeywords>
		<TypeKeywords>   Symbol Dictionary </TypeKeywords>
		<RelatedFunctions>addMethod  defmethod methodsOf</RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords>method message messageName</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[<p> This example defines a method named <b>evalFun</b> that is invoked when the Function  
                 type receives a <b>eval</b>   message.  The <b>evalFun</b> method takes function with a single parameter, 
                 coerces the parameter to an integer and returns the result after evaluating the function.  </p>
	]]></Description>
	<Syntax> 
	<Expression><![CDATA[<sc>(defmethod  Function:  eval (fname arg)  (fname (integer arg) ) )   </sc>]]></Expression>  
    <Note><![CDATA[ Add a message named eval to the Function Methods Dictionary.]]></Note> 
    <Returns><![CDATA[ #&#60Lambda 123456&#62]]></Returns>
    <Expression><![CDATA[<sc>(send eval:  add1 96.1 )              <sc> ]]></Expression>
    <Note><![CDATA[ To invoke the Lambda that responds to the eval message, issue the following statement:]]></Note>
    <Returns><![CDATA[97]]></Returns>
    <Expression><![CDATA[<sc>(eval: add1 96.1 )                   <sc> ]]></Expression>
    <Note><![CDATA[Alternatively, the Lambda may be invoked using the following syntax:]]></Note>
    <Returns><![CDATA[97]]></Returns>
   <Hints><![CDATA[<p>Dissecting the <b>send</b> command involves understanding the methods dictionary 


          of any Analytic Information Server type. In general the <b>send</b> command is translated 


          as a reference into the methods dictionary:</p>
          <p><b>((ref (methodsOf (type object)) msgName  object args .. ))</b></p>
          <p> The statement : </p>
          <p><b>(send eval: add1  96.1 )        </b> </p>
          <p>is translated into </p>
          <p><b>((ref (methodsOf  (type add1 )) eval:)  add1  96.1) </b></p>
          <p> Each statement segment results in: </p>
          <table>
             <tr><td width=60%><b> (type add1)                    </b></td>
                  <td width=40%>Returns: <b> Function  </b></td></tr>
             <tr><td width=60%><b>  (methodsOf (Function:))    </b></td>
                  <td width=40%>Returns: <b> #&#60Dictionary 123456&#62  </b></td></tr>
             <tr><td width=60%><b> (ref (methodsOf  (type add1 )) eval:)      </b></td>
                  <td width=40%>Returns: <b> #&#60Lambda 123456&#62  </b></td></tr>
             <tr><td width=60%><b> ((ref (methodsOf  (type add1 )) eval:)  add1  96.1)        </b></td>
                  <td width=40%>January</td></tr>
          </table>
 ]]></Hints>
   </Syntax>
</Example>
