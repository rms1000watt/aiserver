<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE VMInstruction SYSTEM "../DTD/VMInstruction.dtd">
<VMInstruction>
	<KnowledgeBase>
	    <Title>vmnatDivrNumber</Title>
		<InstructionName>vmnatDivrNumber</InstructionName>
		<InstructionType>Native</InstructionType>
		<ArgumentTypes> Number Double</ArgumentTypes>
		<RelatedVMInstructions> vmnatAddNumber vmnatSubNumber vmnatMulNumber vmnatDivNumber  </RelatedVMInstructions>
		<HumanKeywords>  addition subtraction multiplication division remainder mod</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[                                                  
		<p>When evaluated, this vm instruction divides the Number <b>argument</b> value 
		into the Number <b>source</b> value and places the remainder result in the Number 
		<b>target</b>. There are no conversions made between different types. The result 
		will be returned as an Integer data type. This instruction may return an Error value. 
		After the operation, the Instruction Pointer is promoted. The operation of this vm 
		instruction is expressed in the following C expression:
        </p>	
        <ul><li><b>   (double)target = ((double)source % (double)argument);   </b></li></ul>
    ]]></Description>
	<Syntax>
	    <Expression><![CDATA[  (vmnatDivrNumber argument source target) ]]></Expression>
		<Argument> 
		  <Name>argument</Name>
		  <Format>regoffset</Format>
		  <AISTypes>number</AISTypes>
		</Argument>
		<Argument> 
		  <Name> source </Name>
		  <Format>regoffset </Format>
		  <AISTypes> number</AISTypes>
		</Argument>
		<Argument> 
		  <Name>target  </Name>
		  <Format>regoffset  </Format>
		  <AISTypes>number</AISTypes>
		</Argument>
	</Syntax>
</VMInstruction>
