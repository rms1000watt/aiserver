# ais/libraries/context.ini

#							AIS - Lambda INFORMATION SERVER
# AIS application-specific configuration file.  One instance of an application is referred to
# as a context.  Context.ini holds application-specific, user-settable parameters for an
# application.  The context.ini file resides in the application's working directory which is
# normally the same directory as the one containing the startup file, astartup.sl.
# When establishing a new context, copy this file to the initial working directory for this
# application and then edit the parameter values listed below.

# NOTES
#	 1. When making changes to this file, be sure to note them in the change history below.
#		Put the latest change at the top of the history.
#	 2.	All paths set below are relative to the current working directory for this
#		context, WorkDir. Avoid putting spaces in paths.
#	 3. A previously defined parameter value may be included in the definition of
#		a value using the form:
#			$paramname$
#	 4.	You may override a parameter setting by adding an entry in the startup file
#		  using an entry of the form ;#paramname=value. For example: ;#memory=64
#	 5.	Values can be changed, but do not change the name of a parameter.
#	 6.	Names and values are case sensitive!
#	 7. See ais.ini for list of global default values for these parameters.
#	 8. See parameters.txt for a complete list of parameters

#	*************************************************************************************************

# ContextName - The name of this application
ContextName=LibraryContext

# ClientViewUrl - The web page fetched when the View toolbar button is selected.
# Must come after AisMachineName and HttpPort are defined!
ClientViewUrl=http://$AisMachineName$:$HttpPort$/!$ContextName$/AStartup.html

# ClientSessionFormRules - Default Session Form subscription rules
# Format is a comma-delimited list of contextName.protocolName pairs
# ProtocolNames: all,app,http,xml,disconnected,in-process
ClientSessionFormRules=

# memory[Mb] - Application memory size [>=16]
memory=100

# OnDisconnect - AisLisp Lambda to be called when a connection is unexpectedly closed.
OnDisconnect=

# StartupPrefix - Lisp expression prepended to startup script. Default: (debug jiton:)
StartupPrefix=

# end
