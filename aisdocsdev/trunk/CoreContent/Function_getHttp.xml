<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>getHttp</Title>
		<FunctionName>getHttp</FunctionName>
		<FunctionType>Builtin(FileIO)</FunctionType>
		<ArgumentTypes>Integer String Text</ArgumentTypes>
		<DataType>  Text String</DataType>
		<RelatedFunctions>postHttp requestHttp readHtmlPage</RelatedFunctions>
        <RelatedVMInstructions> none   </RelatedVMInstructions>
		<HumanKeywords> html webpate url http browser</HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>getHttp</b> function utilizes the internal function requestHttp.  </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		 <p> The <b>getHttp</b> function utilizes the internal function <b>requestHttp</b>. 
        Please refer to the description for <b>requestHttp</b> for more detailed information on 
        this operation.</p>
        <p>
When <b>getHttp</b> is invoked, AIS acts like a browser. It sends a request to an 
         internet server on the web, called the <b>host</b>, and receives back a page (HTML text)
         from the host. The returned page may be saved locally if a filename argument is provided 
          or it may be returned back as a string to the calling Lambda. It is up to user of this 
        function to specify he correct URL to access the requested page.</p>
        <p>An optional <b><u>query string</u></b> may be appended to the URL. It is up to the
        calling routine to URL-encode the query string to be included in the url argument. 
         See "HTML The Definitive Guide, O'Reilly Books" for information on forming a query string.</p>
        ]]></Overview>
        <Usage><![CDATA[
            <p>Use <b>getHttp</b> function to fetch web pages from the internet. Unlike
            <b> readHtmlPage</b>, <b>getHttp</b> automatically manages persistent connections
          to web hosts and is capable of saving the returned page in a file. See <b>postHttp</b>
           below for automating responses to a form.</p>
        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p><b>  (getHTTP url filename msecToWait)</b></p>
]]></Expression>
		<Argument>
		  <Name>url </Name>
		  <Note><![CDATA[
		  <p>Any complete or partial URL as described above. Required.</p>
          ]]></Note>
		  <AISTypes>Symbol</AISTypes>
		</Argument>
		<Argument>
		  <Name>filename</Name>
		  <Note><![CDATA[
		  <p>If provided, the returned web page is saved in the specified file on the client
            machine. The file is saved in a path relative to the current working directory. 
           Optional argument.</p>
          ]]></Note>
		  <AISTypes>Text String</AISTypes>
		</Argument>
		<Argument> 
		  <Name>msecToWait</Name>
		  <Note><![CDATA[
		  <p>If provided, it sets the maximum time to wait for a page to be returned from 
          the host. If no response occurs in the allotted time, an error message is returned. 
          The default value for this parameter is about 2000 msecs.</p>
          ]]></Note>
		  <AISTypes>Integer</AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>Returns the entire contents of the specified HTML page including all tags.
          If the timeout expires or if an error is detected, an error message is returned.
         </p>
	    ]]></Return>
	</Syntax>
</Function>
