<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>getSymbolTable</Title>
		<FunctionName>getSymbolTable</FunctionName>
		<FunctionType>Builtin</FunctionType>
		<ArgumentTypes>Symbol ObjVector Context</ArgumentTypes>
		<DataType>Symbol Context</DataType>
		<RelatedFunctions>getGlobalValue</RelatedFunctions>
        <RelatedVMInstructions>  </RelatedVMInstructions> 
		<HumanKeywords>symbol global table value</HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             	<p>The <b>getSymbolTable</b> returns an object vector
                 of the currently active Symbols in the workspace. </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		<p>The <b>getSymbolTable</b> function returns an object vector of the currently active 
           Symbols in the workspace. The object vector can be sorted, can include C Functions, 
           and can include locked Symbols</p>
        ]]></Overview>
        <Usage><![CDATA[
        <p>The <b>getSymbolTable</b> function is used to retrieve the symbols and Lambdas from 
           the Symbol Table.</p>
        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p> (getSymbolTable  sort showCFunc  showLocked)</p>]]></Expression>
		<Argument>
		  <Name>sort</Name>
		  <Note><![CDATA[
		  <p>(Optional) If value of 1, the return Object Vector will be sorted</p>
          ]]></Note>
		  <AISTypes>Integer </AISTypes>
		</Argument>
        <Argument> 
		  <Name>showCFuncs</Name>
		  <Note><![CDATA[
		  <p>(Optional) If value of 1, the return Object Vector will contain names of C functions</p>
          ]]></Note>
		  <AISTypes>Integer </AISTypes>
		</Argument>
        <Argument> 
		  <Name>showLocked</Name>
		  <Note><![CDATA[
		  <p>(Optional) If value of 1, the return Object Vector will contain the names 
              of locked symbols</p>
          ]]></Note>
		  <AISTypes>Integer </AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>Object Vector</p>
	    ]]></Return>
	</Syntax>
</Function>
