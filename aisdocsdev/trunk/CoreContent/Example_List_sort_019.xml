<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example List sort 019</Title>
		<Template>Example</Template>
		<FunctionKeywords>sort</FunctionKeywords>
		<TypeKeywords> List</TypeKeywords>
		<RelatedFunctions>binarySearch ref setq binaryInsert </RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords>sort arrange</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[ This example sorts the List and returns an Integer Vector containing
                 the indices of the List in sorted order.
	]]></Description>
	<Syntax>
	<Expression><![CDATA[<sc>(define Fruits  '("peach" "apple" "orange" "mango" ) )      </sc>]]></Expression>
    <Note><![CDATA[ The first Pair is defined.


    ]]></Note>
    <Returns><![CDATA[ #&#60Pair 123456&#62]]></Returns>
    <Expression><![CDATA[<sc>(sort Fruits &#60 true)         </sc> ]]></Expression>
    <Note><![CDATA[Sorts the List in ascending order.]]></Note>
    <Returns><![CDATA[ #&#60IntVector 123456&#62]]></Returns>
    <Expression><![CDATA[<sc>(display  #&#60IntVector 123456&#62)       </sc> ]]></Expression>
    <Note><![CDATA[The Integer Vector contains the indices of the elements of the List.]]></Note>
    <Returns><![CDATA[#(int| 1 3 2 0 )]]></Returns>
    <Expression><![CDATA[<sc>Fruits[1]        </sc> ]]></Expression>
    <Note><![CDATA[none]]></Note>
    <Returns><![CDATA[apple]]></Returns>  
    <Expression><![CDATA[<sc>Fruits[3]        </sc> ]]></Expression>
    <Note><![CDATA[none]]></Note>
    <Returns><![CDATA[mango]]></Returns>   
    <Expression><![CDATA[<sc>Fruits[2]        </sc> ]]></Expression>
    <Note><![CDATA[none]]></Note>
    <Returns><![CDATA[orange]]></Returns>   
    <Expression><![CDATA[<sc>Fruits[0]        </sc> ]]></Expression>
    <Note><![CDATA[none]]></Note>
    <Returns><![CDATA[peach]]></Returns>
   <Hints><![CDATA[none]]></Hints>
</Syntax>
</Example>
