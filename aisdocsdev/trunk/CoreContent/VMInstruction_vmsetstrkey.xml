<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE VMInstruction SYSTEM "../DTD/VMInstruction.dtd">
<VMInstruction>
	<KnowledgeBase>
	    <Title>vmsetstrkey   </Title>
		<InstructionName>vmsetstrkey  </InstructionName>
		<InstructionType>Generic</InstructionType>
		<ArgumentTypes>  Integer Structure  Symbol  </ArgumentTypes>
		<RelatedVMInstructions> vmsetstrvalue  </RelatedVMInstructions>
		<HumanKeywords>  Structure value key </HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[
		<p>When evaluated, this vm instruction assigns the <b>source</b> word, indexed by the 
          <b>index</b> word, into the specified target Structure "key" element. The target word 
          must contain a Structure Object. The source word may contain any Symbol value. The 
          index word must contain an Integer value within range of existing elements in the 
          Structure. After the operation, both the Stack Pointer and the Instruction Pointer 
          are promoted. The operation of this vm instruction is expressed in the following C 
          expression:
        </p>
        <ul><li><b> (word:Structure)target[(word:int)index] = (word:Symbol)source;   </b></li></ul>
    ]]></Description>
	<Syntax>
	    <Expression><![CDATA[  (vmsetstrkey index source target) ]]></Expression>
		<Argument> 
		  <Name> index </Name>
		  <Format>regoffset </Format>
		  <AISTypes>(word:int)</AISTypes>
		</Argument>
		<Argument>
		  <Name> source </Name>
		  <Format>regoffset </Format>
		  <AISTypes>(word:Symbol)</AISTypes>
		</Argument>
		<Argument>
		  <Name>target  </Name>
		  <Format>regoffset  </Format>
		  <AISTypes>(word:Structure) </AISTypes>
		</Argument>
	</Syntax>
</VMInstruction>
