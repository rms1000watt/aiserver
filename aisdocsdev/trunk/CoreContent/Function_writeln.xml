<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>writeln</Title>
		<FunctionName>writeln</FunctionName>
		<FunctionType>Builtin(FileIO)</FunctionType>
		<ArgumentTypes>Character String Symbol Vector BitVector ByteVector IntVector Void
                       FltVector ObjVector Structure Dictionary Directory Brick Pair List
                       Matrix NumMatrix Integer Float Number Complex Boolean Date Function</ArgumentTypes>
		<DataType>ByteVector  Text String</DataType>
		<RelatedFunctions>fileClose   fileOpen fileWrite fileRead filewriteln display </RelatedFunctions>
        <RelatedVMInstructions> none   </RelatedVMInstructions>
		<HumanKeywords>   ASCII write  newline eol console print</HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>writeln</b> evaluates and displays the value of the expression
          followed by a newline character to the Analytic Information Server Analytic Information 
          Server Console Window .  </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		 <p> The <b>writeln</b> function evaluates and displays the value of the expression
          <b> {expr} </b> followed by a newline character to the Analytic Information Server Lambda 
         Information Server Console Window . If no Console Window is open, Analytic Information
         Server Analytic Information Server will open a Console Window. The <b>writeln</b> function 
         always returns a value of <b>true</b>.</p>
        ]]></Overview>
        <Usage><![CDATA[
            <p>The <b>writeln</b> function is used to print a line to the Console Window. 
            It behaves the same as the <b>display</b> function.</p>
        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p><b>  (writeln expr)</b></p>
]]></Expression>
		<Argument>
		  <Name>expr </Name>
		  <Note><![CDATA[
		  <p>Any Lisp expression.</p>
          ]]></Note>
		  <AISTypes>Integer</AISTypes>
		</Argument>
		<Argument>
		  <Name>exp</Name>
		  <Note><![CDATA[
		  <p>An expression.</p>
          ]]></Note>
		  <AISTypes>Character String Symbol Vector BitVector ByteVector IntVector Void
                       FltVector ObjVector Structure Dictionary Directory Brick Pair List
                       Matrix NumMatrix Integer Float Number Complex Boolean Date Function</AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>Returns the Boolean Value, true and evaluates the expression argument and prints
           the result to the Console window.
        </p>
	    ]]></Return>
	</Syntax>
</Function>
