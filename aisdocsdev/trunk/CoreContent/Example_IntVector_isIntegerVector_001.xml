<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example IntVector isIntegerVector 001</Title>
		<Template>Example</Template>
		<FunctionKeywords>isIntegerVector</FunctionKeywords>
		<TypeKeywords>Vector IntVector Integer</TypeKeywords>
		<RelatedFunctions>isType isFloatVector isBitVector 


                          isNumberVector isByteVector isIdentical


                           isObjectVector isPcodeVector isVector</RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords> Vector bit byte intvector integer Boolean</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[ This example check if the Vector evaluated is an Integer Vector.


                  If it is, the function returns true, otherwise, it returns false.


	]]></Description>
	<Syntax>
  	    <Expression><![CDATA[ <sc>(setq X (new Vector:  integer:  2  11  12))              </sc>]]></Expression>
        <Note><![CDATA[An IntVector with 2 values is defined.]]></Note>
        <Returns><![CDATA[#&#60IntVector 199917&#62]]></Returns>
        <Expression><![CDATA[ <sc>(display X)              </sc>]]></Expression>  
        <Note><![CDATA[none]]></Note> 
        <Returns><![CDATA[#(int| 11 12 )]]></Returns>
        <Expression><![CDATA[ <sc>(isIntegerVector X)      </sc>]]></Expression>
        <Note><![CDATA[none]]></Note>
        <Returns><![CDATA[true]]></Returns>
        <Hints><![CDATA[none]]></Hints>
   </Syntax>
</Example>
