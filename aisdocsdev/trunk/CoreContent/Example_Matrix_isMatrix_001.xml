<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example Matrix isMatrix 001</Title>
		<Template>Example</Template>
		<FunctionKeywords>isMatrix</FunctionKeywords>
		<TypeKeywords>Matrix  Integer</TypeKeywords>
		<RelatedFunctions>isType isObject</RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords> Matrix bit byte   Boolean</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[ This example checks if the Matrix evaluated is a Matrix

                  or any Matrix subtype such as a Number Matrix.


                  If it is, the function returns true, otherwise, it returns false.



	]]></Description>
	<Syntax>
  	     <Expression><![CDATA[ <sc>(setq X #(mat| employee: name:  job:  salary: ) )         </sc>]]></Expression>
        <Note><![CDATA[A Matrix is defined.]]></Note>
        <Returns><![CDATA[#&#60Matrix 123456&#62]]></Returns>
        <Expression><![CDATA[ <sc>(isMatrix  X)      </sc>]]></Expression>
        <Note><![CDATA[none ]]></Note>
        <Returns><![CDATA[ true ]]></Returns>
        <Expression><![CDATA[ <sc>(setq Z (new Matrix:  number:  1  2  #{A: 1 B: 2} #(1 2) ) )     </sc>]]></Expression>  
        <Note><![CDATA[A Number Matrix is defined.]]></Note> 
        <Returns><![CDATA[#&#60NumMatrix 123456&#62]]></Returns>
        <Expression><![CDATA[ <sc>(isMatrix  X)      </sc>]]></Expression>  
        <Note><![CDATA[none ]]></Note> 
        <Returns><![CDATA[ true ]]></Returns>
        <Hints><![CDATA[none]]></Hints>
   </Syntax>
</Example>
