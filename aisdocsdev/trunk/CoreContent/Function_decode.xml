<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>decode</Title>
		<FunctionName>decode</FunctionName>
		<FunctionType>Builtin(FileIO)</FunctionType>
		<ArgumentTypes>ByteVector Number  </ArgumentTypes>
		<DataType>ByteVector</DataType>
		<RelatedFunctions>encode uncompress</RelatedFunctions>
        <RelatedVMInstructions> none   </RelatedVMInstructions>
		<HumanKeywords> LZRW1 decompression uncompress decode</HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>decode</b> function decodes and uncompresses the encoded Byte Vector.</p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		<p>The <b>decode</b> function decodes and uncompresses the encoded Byte Vector <b>{input}</b>. 
          The specified key <b>{key}</b> will be used to decode and after decoding, the <b>decode</b>
          function calls the <b>uncompress</b> function. The end result will be the original
          Byte Vector. The <b>{key}</b> argument must be the same key that was used by the <b>encode</b>
          function to encode the original Byte Vector.</p>
        ]]></Overview>
        <Usage><![CDATA[
        <p>The <b>decode </b> function is used to restore an encoded object back to its original 
            state.</p>
        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p>(decode input key)</p>]]></Expression>
		<Argument> 
		  <Name>input</Name>
		  <Note><![CDATA[
		  <p>The Byte Vector to be decoded and then uncompressed.</p>
          ]]></Note>
		  <AISTypes>ByteVector </AISTypes>
		</Argument>
		<Argument> 
		  <Name>key</Name>
		  <Note><![CDATA[
		  <p>The Number key to use for decoding (must be the same key used for encoding).</p>
          ]]></Note>
		  <AISTypes>Number  </AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>The original Object before encoding
        </p>
	    ]]></Return>   
	</Syntax>
</Function>
