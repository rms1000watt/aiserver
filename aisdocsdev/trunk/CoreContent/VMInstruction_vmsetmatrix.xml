<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE VMInstruction SYSTEM "../DTD/VMInstruction.dtd">
<VMInstruction>
	<KnowledgeBase>
	    <Title>vmsetmatrix </Title>
		<InstructionName>vmsetmatrix </InstructionName>
		<InstructionType>Generic</InstructionType>
		<ArgumentTypes> Word Integer Matrix</ArgumentTypes>
		<RelatedVMInstructions>  vmset vmsetnummatrix   </RelatedVMInstructions>
		<HumanKeywords>   set ref matrix nummatrix</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[                                                  
		<p>When evaluated, this vm instruction assigns the <b>source</b> 
		word into the <b>target</b> word. The target word must contain a 
		Matrix Object. The source, index, and target arguments are 
		mandatory. The source argument word must contain an indexable value. 
		After the operation, both the Stack Pointer and the Instruction 
		Pointer are promoted. The operation of this vm instruction is 
		expressed in the following C expression:
        </p>	
        <ul><li><b>  (word:Matrix)target[(int)index] = (word)source;</b></li></ul>
    ]]></Description>
	<Example>
	    <![CDATA[  <sc><pre>
		(defun vmsetmatrix_test( v )
    		(vmsetmatrix 2 22 v)
		)
		(setq v (new Matrix: 3))
		(writeln (vmsetmatrix_test v))
		</pre> </sc>
 		]]>
	</Example>
	<Syntax>
	    <Expression><![CDATA[  (vmsetMatrix index source target) ]]></Expression>
		<Argument> 
		  <Name>index</Name>
		  <Format>regoffset</Format>
		  <AISTypes>integer</AISTypes>
		</Argument>   
		<Argument> 
		  <Name>source</Name>
		  <Format>regoffset</Format>
		  <AISTypes>word</AISTypes>
		</Argument>     
		<Argument> 
		  <Name>target</Name>
		  <Format>regoffset</Format>
		  <AISTypes>(word:Matrix)</AISTypes>
		</Argument>
	</Syntax>
</VMInstruction>
