<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example Number addMethod 014</Title>
		<Template>Example</Template>
		<FunctionKeywords>addMethod</FunctionKeywords>
		<TypeKeywords> Number Symbol Dictionary </TypeKeywords>
		<RelatedFunctions>defmethod send methodsOf</RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords>method message messageName</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[<p> This example defines a method named <b>doubleThis </b> that is invoked when the Number  
                 type receives an double message.  The <b>doubleThis</b> method doubles its 
                 numeric argument.  </p>
	]]></Description>
	<Syntax>
	<Expression><![CDATA[<b>(defun doubleThis (b) (* b 2) )     </b>]]></Expression>
    <Note><![CDATA[ First Define the doubleThis method:

]]></Note>
    <Returns><![CDATA[ #&#60Lambda 123456&#62]]></Returns>
    <Expression><![CDATA[<sc>(addMethod  Number: double: doubleThis)               <sc> ]]></Expression>
    <Note><![CDATA[Install the doubleThis method and the message named double in the Number Methods Dictionary.]]></Note>
    <Returns><![CDATA[#&#60Dictionary 123456&#62]]></Returns>
    <Expression><![CDATA[<sc>(send double: 1.1)       <sc> ]]></Expression>
    <Note><![CDATA[To invoke the Lambda that responds to the double message, issue the following statement:]]></Note>
    <Returns><![CDATA[2.2]]></Returns>
    <Expression><![CDATA[<sc>(double: 1.1)       <sc> ]]></Expression>
    <Note><![CDATA[Alternatively, the Lambda may be invoked using the following syntax:]]></Note>
    <Returns><![CDATA[2.2]]></Returns>
    <Hints><![CDATA[none]]></Hints>
</Syntax>
</Example>
