<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>makeGaussianMatrix</Title>
		<FunctionName>makeGaussianMatrix</FunctionName>
		<FunctionType>Builtin (Vector Machine Learning)</FunctionType>
    	<ArgumentTypes>NumMatrix </ArgumentTypes>
        <DataType> NumMatrix</DataType>
		<RelatedFunctions> makeGramMatrix matrixGaussianEliminate matrixGaussianSubstitute   </RelatedFunctions>
        <RelatedVMInstructions>   none  </RelatedVMInstructions>
		<HumanKeywords> Matrix NumMatrix Boolean Gaussian 
                        least squares primal regression</HumanKeywords>
	</KnowledgeBase>
          <Description><![CDATA[
             <p> The <b>makeGaussianMatrix</b> function returns the M by M+1 system of linear 
             equations representing the coefficient derivative equations for the minimizing the 
             least squares error.</p>
          ]]></Description>
	<Brief>
        <Overview><![CDATA[
		<p>The <b>makeGaussianMatrix</b> function returns the M by M+1 system of linear equations
           representing the coefficient derivative equations for the minimizing the least squares error.
        </p>
        <p>The input argument {NumMatrix} must be an N by M+1 number matrix representing the original 
         independent variable observations with the dependent variable in the last column in the form of: </p>   
        <p><b><blockquote>x x x x... y</blockquote></b></p>
        <p><b><blockquote>x x x x... y</blockquote></b></p>
        <p><b><blockquote>....</blockquote></b></p>
        <p><b><blockquote>x x x x... y</blockquote></b></p>
        <p>The output argument will be an M by M+1 number matrix containing the dot products of 
           the column vectors of the original observation matrix XY, where: 
           <b>G[r,c] = vectorDotProduct(colXY[r],colXY[c]).</b></p>
        ]]></Overview>
        <Usage><![CDATA[
        <p>The <b>makeGaussianMatrix </b> function is a non-destructive function useful when you 
           want to create a Gaussian matrix in preparation for primal form regression. 
           See Sedgewick[2] chap 38.
        </p>
        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p>   (makeGaussianMatrix NumMatrix ) </p>]]></Expression>
		<Argument>
		  <Name>NumMatrix</Name>
		  <Note><![CDATA[
		  <p> Matrix containing the original independent and dependent observations</p>
          ]]></Note>
		  <AISTypes>NumMatrix</AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>A new number Matrix object containing the dot products of the column vectors of the 
            original observation matrix.
        </p>
	    ]]></Return>
	</Syntax>
</Function>
