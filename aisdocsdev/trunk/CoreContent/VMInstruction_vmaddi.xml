<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE VMInstruction SYSTEM "../DTD/VMInstruction.dtd">
<!-- saved from url=(0022)http://internet.e-mail -->
<VMInstruction>
	<KnowledgeBase>
	    <Title>vmaddi</Title>
		<InstructionName>vmaddi</InstructionName>
		<InstructionType>Generic</InstructionType>
		<ArgumentTypes>Complex Integer Number</ArgumentTypes>
		<RelatedVMInstructions>vmsubi vmdivi vmmuli</RelatedVMInstructions>
		<HumanKeywords>addition subtraction division</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[
		<p>
		When evaluated, this vm instruction adds the <b>argument</b> word numeric value to the <b>source</b> word numeric value and 
		places the result in the <b>target</b> as an Integer data type. Both words must be of numeric types. 
		Conversion between different numeric types is automatic. The result will be returned as an Integer data type. 
		This instruction may return an Error value. After the operation, the Instruction Pointer is promoted. 
		The operation of this vm instruction is expressed in the following C expression:        
                <p>
        <ul><li><b>(word:numeric)target = (word:numeric)source + (word:numeric)argument;</b></li></ul>
    ]]></Description>
    <Example>
        <![CDATA[ <sc> <pre>
			(defun vmaddi_test(arg1)
    			vars: ((a 0) b)
    			(vmaddi a arg1 b)
    			(vmreturn b)
			)
			(writeln(vmaddi_test 100))
        </pre>  </sc>
        ]]>
    </Example>
	<Syntax>
	    <Expression><![CDATA[(vmaddi argument source target)]]></Expression>
		<Argument> 
		  <Name>argument</Name>
		  <Format>regoff</Format>
		  <AISTypes>(word:numeric)</AISTypes>
		</Argument>
		<Argument> 
		  <Name>source</Name>
		  <Format>regoff</Format>
		  <AISTypes>(word:numeric)</AISTypes>
		</Argument>
		<Argument> 
		  <Name>target</Name>
		  <Format>regoff</Format>
		  <AISTypes>(word:numeric)</AISTypes>
		</Argument>
	</Syntax>
</VMInstruction>
