<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example Complex compare 021</Title>
		<Template>Example</Template>
		<FunctionKeywords>compare</FunctionKeywords>
		<TypeKeywords>Boolean Integer Number</TypeKeywords>
		<RelatedFunctions>compareEQ compareNE compareGT compareGE compareLT  compareLE</RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords>compare symbol equal lesser </HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[ These examples use the <b>compare</b> functions to do a 











                  case-sensitive comparison of two objects of the same type.  A Boolean value is returned.











	]]></Description>
	<Syntax>
        <Expression><![CDATA[ <sc>(setq X #c1.0)                  </sc>]]></Expression>
        <Note><![CDATA[none]]></Note>
        <Returns><![CDATA[#&#60Complex 123456&#62]]></Returns>
        <Expression><![CDATA[ <sc>(setq Y #c1.0+1.0i)                  </sc>]]></Expression>  
        <Note><![CDATA[none]]></Note> 
        <Returns><![CDATA[#&#60Complex 234567&#62]]></Returns>
        <Expression><![CDATA[ <sc>(compare X Y)                  </sc>]]></Expression>
        <Note><![CDATA[ The first value is lesser than the second value.]]></Note>
        <Returns><![CDATA[-1]]></Returns>
        <Expression><![CDATA[ <sc>(compare Y X)                    </sc>]]></Expression>
        <Note><![CDATA[ The second value is greater than the first value.]]></Note>
        <Returns><![CDATA[1]]></Returns>
        <Expression><![CDATA[ <sc>(compare X X)                    </sc>]]></Expression>  
        <Note><![CDATA[ none]]></Note> 
        <Returns><![CDATA[0]]></Returns>
        <Hints><![CDATA[
           <p>If the real parts are equal, the imaginary parts are compared. If one argument
           has only a real part, the imaginary part is taken to be zero. </p>
        ]]></Hints>
   </Syntax>
</Example>
