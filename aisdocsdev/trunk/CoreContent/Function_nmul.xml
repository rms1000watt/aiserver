<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>nmul</Title>
		<FunctionName>nmul</FunctionName>
		<FunctionType>Builtin(Math)</FunctionType>
		<ArgumentTypes>Number Void </ArgumentTypes>
		<DataType>Number</DataType>
		<RelatedFunctions>  nsub nmod nadd ndiv</RelatedFunctions>
        <RelatedVMInstructions> vmnadd vmndiv vmndivr vmnmul   </RelatedVMInstructions>
		<HumanKeywords> number arithmetic multiplication   operators </HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>nmul</b> function computes the product of its arguments. </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		<p>The <b>nmul</b> function computes the product of its arguments. The arguments must be 
          Number and the product returned is a Number.  The operands are not checked and are 
          not coerced. 
        </p>
        ]]></Overview>
        <Usage><![CDATA[
        <p>The <b>nmul </b> built-in function is a simple but very fast numeric division 
          function that assumes that all of its arguments are type Number. Use the <b>nmul</b> 
          function for highly optimized numeric division.  For a slower, but more general 
          multiplication that performs type conversion, use the multiplication operator, *.
        </p>
         ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p><b>  (nmul  num1 num2, ... ) </b></p>
]]></Expression>
		<Argument>
		  <Name>num1</Name>
		  <Note><![CDATA[
		  <p>The multiplicand. Must be a Number.</p>
          ]]></Note>
		  <AISTypes>Number</AISTypes>
		</Argument>
		<Argument>
		  <Name>num2</Name>
		  <Note><![CDATA[
		  <p>An arbitrary number of  Number multiplier operands.</p>
          ]]></Note>
		  <AISTypes>Number</AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>The product of all the Number arguments expressed as an Number.
	    </p>
	    ]]></Return>
	</Syntax>
</Function>
