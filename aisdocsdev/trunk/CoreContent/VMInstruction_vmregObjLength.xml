<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE VMInstruction SYSTEM "../DTD/VMInstruction.dtd">
<VMInstruction>
	<KnowledgeBase>
	    <Title>vmregObjLength </Title> 
		<InstructionName>vmregObjLength  </InstructionName>
		<InstructionType>Register</InstructionType>
		<ArgumentTypes>  Integer String Symbol ByteVector IntVector
		                 ShortVector FloatVector NumVector IntMatrix NumMatrix</ArgumentTypes>
		<RelatedVMInstructions> vmregObjPointer  </RelatedVMInstructions>
		<HumanKeywords> ObjLength ObjPointer Length Object</HumanKeywords>
	</KnowledgeBase>                   
	<Description><![CDATA[
		<p>When evaluated, this vm instruction loads the length of the data 
		array of the <b>variable</b> object into the register <b>target</b>. 
		The <b>variable</b> argument must be either an args, vars, pvars, 
		cvars, or global variable, and must be of type String, Symbol, 
		ByteVector, IntVector, ShortVector, FloatVector, NumVector, IntMatrix, or NumMatrix. 
		The resulting register will contain the Integer length of the object. 
		The result will be returned as a type Integer and placed into the <b>target</b> register. 
		This instruction may return an Error value. 
		After the operation, the Instruction Pointer is promoted. 
		The operation of this vm instruction is expressed in the following 
		C expression:
    	</p>      
        <ul><li><b> (int)target = FSmartbase_GetObjectLen(variable); </b></li></ul>
    ]]></Description>
	<Syntax>
	    <Expression><![CDATA[(vmregObjLength variable target)]]></Expression>
		<Argument> 
		  <Name>variable</Name>
		  <Format>regoffset</Format>
		  <AISTypes>object</AISTypes>
		</Argument>
		<Argument> 
		  <Name>target</Name>
		  <Format>register</Format>
		  <AISTypes>integer</AISTypes>
		</Argument>
	</Syntax>
</VMInstruction>
