<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>binaryNand</Title>
		<FunctionName>binaryNand</FunctionName>
		<FunctionType>Builtin(Bitwise)</FunctionType>
		<ArgumentTypes>Integer Character Boolean</ArgumentTypes>
		<DataType>Integer</DataType>
		<RelatedFunctions>binaryNor binaryNxor</RelatedFunctions>
        <RelatedVMInstructions> none   </RelatedVMInstructions>
		<HumanKeywords>numerical nand negative binary</HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>binaryNand</b> function  performs a numerical bitwise nand (<b>and</b> the arguments and then negate them) on each 
            expression from left to right, returning the value of the result as a binary Integer. </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		<p>The <b>binaryNand</b> function performs a numerical bitwise <b>nand</b> (and the arguments and 
         then negate them) on each expression from left to right, returning the value of the result
         as a binary Integer. The arguments are assumed to be integers, and are not checked for the
         correct type. Characters and Boolean arguments will be treated as Integers in this function.</p>
        ]]></Overview>
        <Usage><![CDATA[
        <p>Use the <b>binaryNand</b> function when a binary integer operation is required. </p>
        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p>(binaryNand exp ...)</p>]]></Expression>
		<Argument> 
		  <Name>exp ...</Name>
		  <Note><![CDATA[
		  <p>One or more integer expressions.  A Character or Boolean expression is converted to Integer.</p>
          ]]></Note>
		  <AISTypes>Integer Character Boolean </AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>The bitwise Nand (not and) of the argument(s).
        </p>
	    ]]></Return>   
	</Syntax>
</Function>
