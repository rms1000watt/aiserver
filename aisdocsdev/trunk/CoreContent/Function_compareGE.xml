<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>compareGE</Title>
		<FunctionName>compareGE</FunctionName>
		<FunctionType>Builtin</FunctionType>
		<ArgumentTypes>String Symbol Structure Dictionary Matrix Number Character Complex
                       Directory Vector Brick ShortVector Boolean Pair List Void Date Function Lambda Object Repository </ArgumentTypes>  
		<DataType>String Symbol Structure Dictionary Directory BitVector ShortVector NumMatrix Boolean Number Lambda ObjectRepository Pair List Vector ObjVector Matrix Brick Void Character Date Function Complex CpxVector IntVector</DataType>
		<RelatedFunctions>compare compareEQ compareNE compareLT compareGT  compareLE </RelatedFunctions>
        <RelatedVMInstructions> vmregStringCompare vmregStringiCompare  </RelatedVMInstructions>
		<HumanKeywords>compare  equal boolean greater  </HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>compareGE</b> function compares objects of the same Data Type and determines
               whether the first object is greater than or equal to the second object.  A Boolean value is returned. </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		<p>The <b>compareGE</b>  is the comparison function  that can be used with this Data Type. 
           The resulting value is a Boolean value of <b>true</b> or <b>false</b>.
        </p>
        ]]></Overview>
	   <Overview-ObjectRepository><![CDATA[
		<p>The <b>compareGE</b>  is the comparison function  that can be used with this Data Type. 
           The resulting value is a Boolean value of <b>true</b> or <b>false</b>. The Object Repository files
           and NOT the file names are compared.
        </p>
        ]]></Overview-ObjectRepository>
	   <Overview-Void><![CDATA[
		<p>The <b>compareGE</b>  is the comparison function  that can be used with native data 
         types and Heap objects. The resulting value is a Boolean value of <b>true</b> or <b>false</b>. 
         The #void constant will always be less than any other value.
        </p>
        ]]></Overview-Void>
        <Usage><![CDATA[
        <p>Use the <b>compareGE</b> function when you wish to compare two objects of this Data Type and
           determine if the first object is <b>greater than or equal</b> to the second object and you wish the result to be expressed 
           as a Boolean value (true or false). 
The alternative comparison function, <b>compare</b>,
           only determines if two objects are equal, less than or greater than.
        </p>
         ]]></Usage>
    </Brief>
	<Syntax-String>
	    <Expression><![CDATA[ (compareGE string1  string2 )]]></Expression>
		<Argument>
		  <Name>string1</Name>
		  <Note><![CDATA[
		  <p> The first String to be compared </p>
          ]]></Note>
		  <AISTypes>String</AISTypes>
		</Argument>
		<Argument>
		  <Name>string2</Name>
		  <Note><![CDATA[
		  <p>The second String to be compared</p>
          ]]></Note>
		  <AISTypes>String</AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>Returns true if the first String is greater than or equal to the second String and false 
           if the first String is lesser in value than the second String.
	    </p>
	    ]]></Return>
	</Syntax-String>
	<Syntax-Symbol>
	    <Expression><![CDATA[ (compareGE sym1  sym2 )]]></Expression>
		<Argument> 
		  <Name>sym1</Name>
		  <Note><![CDATA[
		  <p> The first Symbol to be compared </p>
          ]]></Note>
		  <AISTypes>Symbol</AISTypes>
		</Argument>
		<Argument> 
		  <Name>sym2</Name>
		  <Note><![CDATA[
		  <p>The second Symbol to be compared</p>
          ]]></Note>
		  <AISTypes>Symbol</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Symbol is greater than or equal to the second Symbol and false 
           if the first Symbol is lesser in value than the second Symbol.
	    </p>
	    ]]></Return>
	</Syntax-Symbol>
	<Syntax-Structure>
	    <Expression><![CDATA[ (compareGE struct1  struct2 )]]></Expression>
		<Argument> 
		  <Name>struct1</Name>
		  <Note><![CDATA[
		  <p> The first Structure to be compared </p>
          ]]></Note>
		  <AISTypes>Structure</AISTypes>
		</Argument>
		<Argument> 
		  <Name>struct2</Name>
		  <Note><![CDATA[
		  <p>The second Structure to be compared</p>
          ]]></Note>
		  <AISTypes>Structure</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Structure is greater than or equal to the second Structure and false 
           if the first Structure is lesser in value than the second Structure.
	    </p>
	    ]]></Return>
	</Syntax-Structure>
	<Syntax-Dictionary>
	    <Expression><![CDATA[ (compareGE dict1  dict2 )]]></Expression>
		<Argument> 
		  <Name>dict1</Name>
		  <Note><![CDATA[
		  <p> The first Dictionary to be compared </p>
          ]]></Note>
		  <AISTypes>Dictionary</AISTypes>
		</Argument>
		<Argument> 
		  <Name>dict2</Name>
		  <Note><![CDATA[
		  <p>The second Dictionary to be compared</p>
          ]]></Note>
		  <AISTypes>Dictionary</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Dictionary is greater than or equal to the second Dictionary and false 
           if the first Dictionary is lesser in value than the second Dictionary.
	    </p>
	    ]]></Return>
	</Syntax-Dictionary>
   <Syntax-Directory>
	    <Expression><![CDATA[ (compareGE dir1  dir2 )]]></Expression>
		<Argument> 
		  <Name>dir1</Name>
		  <Note><![CDATA[
		  <p> The first Directory to be compared </p>
          ]]></Note>
		  <AISTypes>Directory</AISTypes>
		</Argument>
		<Argument> 
		  <Name>dir2</Name>
		  <Note><![CDATA[
		  <p>The second Directory to be compared</p>
          ]]></Note>
		  <AISTypes>Directory</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Directory is greater than or equal to the second Directory and false 
           if the first Directory is lesser in value than the second Directory.
	    </p>
	    ]]></Return>
	</Syntax-Directory>
   <Syntax-Vector>
	    <Expression><![CDATA[ (compareGE vector1  vector2 )]]></Expression>
		<Argument> 
		  <Name>vector1</Name>
		  <Note><![CDATA[
		  <p> The first Vector to be compared </p>
          ]]></Note>
		  <AISTypes>Vector</AISTypes>
		</Argument>
		<Argument> 
		  <Name>vector2</Name>
		  <Note><![CDATA[
		  <p>The second Vector to be compared</p>
          ]]></Note>
		  <AISTypes>Vector</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Vector is greater than or equal to the second Vector and false 
           if the first Vector is lesser in value than the second Vector.
	    </p>
	    ]]></Return>
	</Syntax-Vector>
   <Syntax-FltVector>
	    <Expression><![CDATA[ (compareGE  fltvector1   fltvector2)]]></Expression>
		<Argument> 
		  <Name>fltvector1</Name>
		  <Note><![CDATA[
		  <p> The first FltVector to be compared </p>
          ]]></Note>
		  <AISTypes>FltVector</AISTypes>
		</Argument>
		<Argument> 
		  <Name>fltvector2</Name>
		  <Note><![CDATA[
		  <p>The second FltVector to be compared</p>
          ]]></Note>
		  <AISTypes>FltVector</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Vector is greater than or equal to the second Vector and false 
           if the first Vector is lesser in value than the second Vector.
	    </p>
	    ]]></Return>  
	</Syntax-FltVector>
   <Syntax-IntVector>
	    <Expression><![CDATA[ (compareGE  intvector1 intvector2)]]></Expression>
		<Argument> 
		  <Name>intvector1</Name>
		  <Note><![CDATA[
		  <p> The first IntVector to be compared </p>
          ]]></Note>
		  <AISTypes>IntVector</AISTypes>
		</Argument>
		<Argument> 
		  <Name>intvector2</Name>
		  <Note><![CDATA[
		  <p>The second IntVector to be compared</p>
          ]]></Note>
		  <AISTypes>IntVector</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Vector is greater than or equal to the second Vector and false 
           if the first Vector is lesser in value than the second Vector.
	    </p>
	    ]]></Return>  
	</Syntax-IntVector>
   <Syntax-ShortVector>
	    <Expression><![CDATA[ (compareGE  shortvector1 shortvector2)]]></Expression>
		<Argument> 
		  <Name>shortvector1</Name>
		  <Note><![CDATA[
		  <p> The first ShortVector to be compared </p>
          ]]></Note>
		  <AISTypes>ShortVector</AISTypes>
		</Argument>
		<Argument> 
		  <Name>shortvector2</Name>
		  <Note><![CDATA[
		  <p>The second ShortVector to be compared</p>
          ]]></Note>
		  <AISTypes>ShortVector</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Vector is greater than or equal to the second Vector and false 
           if the first Vector is lesser in value than the second Vector.
	    </p>
	    ]]></Return>  
	</Syntax-ShortVector>
   <Syntax-NumVector>
	    <Expression><![CDATA[ (compareGE  numvector1 numvector2)]]></Expression>
		<Argument> 
		  <Name>numvector1</Name>
		  <Note><![CDATA[
		  <p> The first NumVector to be compared </p>
          ]]></Note>
		  <AISTypes>NumVector</AISTypes>
		</Argument>
		<Argument> 
		  <Name>numvector2</Name>
		  <Note><![CDATA[
		  <p>The second NumVector to be compared</p>
          ]]></Note>
		  <AISTypes>NumVector</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Vector is greater than or equal to the second Vector and false 
           if the first Vector is lesser in value than the second Vector.
	    </p>
	    ]]></Return>  
	</Syntax-NumVector>
   <Syntax-ObjVector>
	    <Expression><![CDATA[ (compareGE  objvector1 objvector2)]]></Expression>
		<Argument> 
		  <Name>objvector1</Name>
		  <Note><![CDATA[
		  <p> The first ObjVector to be compared </p>
          ]]></Note>
		  <AISTypes>ObjVector</AISTypes>
		</Argument>
		<Argument> 
		  <Name>objvector2</Name>
		  <Note><![CDATA[
		  <p>The second ObjVector to be compared</p>
          ]]></Note>
		  <AISTypes>ObjVector</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Vector is greater than or equal to the second Vector and false 
           if the first Vector is lesser in value than the second Vector.
	    </p>
	    ]]></Return>  
	</Syntax-ObjVector>
   <Syntax-BitVector>
	    <Expression><![CDATA[ (compareGE  bitvector1 bitvector2)]]></Expression>
		<Argument> 
		  <Name>bitvector1</Name>
		  <Note><![CDATA[
		  <p> The first BitVector to be compared </p>
          ]]></Note>
		  <AISTypes>BitVector</AISTypes>
		</Argument>
		<Argument> 
		  <Name>bitvector2</Name>
		  <Note><![CDATA[
		  <p>The second BitVector to be compared</p>
          ]]></Note>
		  <AISTypes>BitVector</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Vector is greater than or equal to the second Vector and false 
           if the first Vector is lesser in value than the second Vector.
	    </p>
	    ]]></Return>  
	</Syntax-BitVector>
 <Syntax-Brick>
	    <Expression><![CDATA[ (compareGE brick1  brick2 )]]></Expression>
		<Argument> 
		  <Name>brick1</Name>
		  <Note><![CDATA[
		  <p> The first Brick to be compared </p>
          ]]></Note>
		  <AISTypes>Brick</AISTypes>
		</Argument>
		<Argument> 
		  <Name>brick2</Name>
		  <Note><![CDATA[
		  <p>The second Brick to be compared</p>
          ]]></Note>
		  <AISTypes>Brick</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Brick is greater than or equal to the second Brick and false 
           if the first Brick is lesser in value than the second Brick.
	    </p>
	    ]]></Return>
	</Syntax-Brick>
 <Syntax-Matrix>
	    <Expression><![CDATA[ (compareGE matrix1  matrix2 )]]></Expression>
		<Argument> 
		  <Name>matrix1</Name>
		  <Note><![CDATA[
		  <p> The first Matrix to be compared </p>
          ]]></Note>
		  <AISTypes>Matrix</AISTypes>
		</Argument>
		<Argument> 
		  <Name>matrix2</Name>
		  <Note><![CDATA[
		  <p>The second Matrix to be compared</p>
          ]]></Note>
		  <AISTypes>Matrix</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Matrix is greater than or equal to the second Matrix and false 
           if the first Matrix is lesser in value than the second Matrix.
	    </p>
	    ]]></Return>
	</Syntax-Matrix>
 <Syntax-NumMatrix>
	    <Expression><![CDATA[ (compareGE nummatrix1 nummatrix2 )]]></Expression>
		<Argument> 
		  <Name>nummatrix1</Name>
		  <Note><![CDATA[
		  <p> The first NumMatrix to be compared </p>
          ]]></Note>
		  <AISTypes>NumMatrix</AISTypes>
		</Argument>
		<Argument> 
		  <Name>nummatrix2</Name>
		  <Note><![CDATA[
		  <p>The second NumMatrix to be compared</p>
          ]]></Note>
		  <AISTypes>NumMatrix</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first NumMatrix is greater than or equal to the second NumMatrix and false 
           if the first NumMatrix is lesser in value than the second NumMatrix.
	    </p>
	    ]]></Return>
	</Syntax-NumMatrix>
 <Syntax-Pair>
	    <Expression><![CDATA[ (compareGE pair1  pair2 )]]></Expression>
		<Argument> 
		  <Name>pair1</Name>
		  <Note><![CDATA[
		  <p> The first Pair to be compared </p>
          ]]></Note>
		  <AISTypes>Pair</AISTypes>
		</Argument>
		<Argument> 
		  <Name>pair2</Name>
		  <Note><![CDATA[
		  <p>The second Pair to be compared</p>
          ]]></Note>
		  <AISTypes>Pair</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Pair is greater than or equal to the second Pair and false 
           if the first Pair is lesser in value than the second Pair.
	    </p>
	    ]]></Return>
	</Syntax-Pair>
 <Syntax-List>
	    <Expression><![CDATA[ (compareGE list1  list2 )]]></Expression>
		<Argument> 
		  <Name>list1</Name>
		  <Note><![CDATA[
		  <p> The first List to be compared </p>
          ]]></Note>
		  <AISTypes>List</AISTypes>
		</Argument>
		<Argument> 
		  <Name>list2</Name>
		  <Note><![CDATA[
		  <p>The second List to be compared</p>
          ]]></Note>
		  <AISTypes>List</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first List is greater than or equal to the second List and false 
           if the first List is lesser in value than the second List.
	    </p>
	    ]]></Return>
	</Syntax-List>
 <Syntax-Lambda>
	    <Expression><![CDATA[ (compareGE Lambda1  Lambda2 )]]></Expression>
		<Argument> 
		  <Name>Lambda1</Name>
		  <Note><![CDATA[
		  <p> The first Lambda to be compared </p>
          ]]></Note>
		  <AISTypes>Lambda</AISTypes>
		</Argument>
		<Argument> 
		  <Name>Lambda2</Name>
		  <Note><![CDATA[
		  <p>The second Lambda to be compared</p>
          ]]></Note>
		  <AISTypes>Lambda</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Lambda is greater than or equal to the second Lambda and false 
           if the first Lambda is lesser in value than the second Lambda.
	    </p>
	    ]]></Return>
	</Syntax-Lambda>
 <Syntax-ObjectRepository>
	    <Expression><![CDATA[ (compareGE gor1  gor2 )]]></Expression>
		<Argument> 
		  <Name>gor1 </Name>
		  <Note><![CDATA[
		  <p> The first Object Repository  to be compared </p>
          ]]></Note>
		  <AISTypes>ObjectRepository </AISTypes>
		</Argument>
		<Argument> 
		  <Name>gor2</Name>
		  <Note><![CDATA[
		  <p>The second Object Repository  to be compared</p>
          ]]></Note>
		  <AISTypes>ObjectRepository </AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Object Repository  is greater than or equal to the second Object Repository  and false 
           if the first Object Repository  is lesser in value than the second Object Repository .
	    </p>
	    ]]></Return>
	</Syntax-ObjectRepository>
 <Syntax>
	    <Expression><![CDATA[ (compareGE obj1  obj2 )]]></Expression>
		<Argument> 
		  <Name>obj1</Name>
		  <Note><![CDATA[
		  <p> First object to be compared. Must be a native data type </p>
          ]]></Note>
		  <AISTypes>Void Boolean Character Number Date Function Complex</AISTypes>
		</Argument>
		<Argument> 
		  <Name>obj2</Name>
		  <Note><![CDATA[
		  <p>Second object to be compared. Must be a native data type.</p>
          ]]></Note>
		  <AISTypes>Void Boolean Character Number Date Function Complex</AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>Returns true if the first Object is greater than or equal to the second Object and false 
           if the first Object is lesser in value than the second Object.
	    </p>
	    ]]></Return>
	</Syntax>
</Function>
