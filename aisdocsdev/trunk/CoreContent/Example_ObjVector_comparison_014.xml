<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example ObjVector comparison functions 014</Title>
		<Template>Example</Template>
		<FunctionKeywords>comparison</FunctionKeywords>
		<TypeKeywords>ObjVector Boolean</TypeKeywords>
		<RelatedFunctions>compare compareEQ compareGT compareNE compareLT  compareLE</RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords>compare vector equal lesser </HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[ These examples use the <b>comparison</b> functions to do a 






                  case-sensitive comparison of two objects of the same type.  A Boolean value is returned.






	]]></Description>
	<Syntax>
  	    <Expression><![CDATA[ <sc>(= #(obj| #{A: 1 B: 2} #(1 2 ) ) #(obj| #{dic|A: 1 B: 2} #(1 2 ) ))    </sc>]]></Expression>
        <Note><![CDATA[The contents of the ObjVector are not of the same type.]]></Note>
        <Returns><![CDATA[false]]></Returns>
        <Expression><![CDATA[ <sc>(&#60 #(obj| #{A: 1 B: 2} #(1 2 ) ) #(obj| #{A: 5 B: 2} #(1 2 ) ))           </sc>]]></Expression>
        <Note><![CDATA[none]]></Note>
        <Returns><![CDATA[true]]></Returns>
        <Expression><![CDATA[ <sc>(&#62  #(obj| #{A: 1 B: 2} #(1 2 ) ) #(obj| #{A: 5 B: 2} #(5  ) ))   </sc>]]></Expression>
        <Note><![CDATA[none]]></Note>
        <Returns><![CDATA[false]]></Returns>
        <Hints><![CDATA[
           <p>If you prefer an integer resulting from the comparison (0 for equal, -1 for less than, 





              and 1 for greater than), use the <b>compare</b> function. </p>
        ]]></Hints>
   </Syntax>
</Example>
