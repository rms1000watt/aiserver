<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>fileWrite</Title>
		<FunctionName>fileWrite</FunctionName>
		<FunctionType>Builtin(FileIO)</FunctionType>
		<ArgumentTypes>ByteVector Text Integer Boolean</ArgumentTypes>
		<DataType>ByteVector  Text String</DataType>
		<RelatedFunctions>fileClose   fileOpen fileWriteln fileRead writeln display </RelatedFunctions>
        <RelatedVMInstructions> none   </RelatedVMInstructions>
		<HumanKeywords> file fileID ASCII write filename filetype  </HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>fileWrite</b> function writes data from the specified ByteVector Object to a data file.   </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		 <p> The <b>fileWrite</b> function writes data from the specified ByteVector Object to 
             a data file. This function always returns the number of bytes written or an error 
         if there was a problem.</p>
        ]]></Overview>
        <Usage><![CDATA[
            <p>Data is entered into a file with the <b>fileWrite, fwriteln,</b> or <b>fdisplay</b>
            functions, however, records are not actually committed to the file until the file 
            is closed. Thus, attempting to read a record immediately after a <b>fileWrite</b> or 
            <b>fdisplay</b> will result in an error. In order to verify records that have been 
            written, it is necessary to close the file and save the file (<b>fileClose</b>
            with an option argument equal to 1) . The file can then be re-opened and read 
             with the <b>fileRead</b> function.</p>
        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p><b>  (fileWrite fileID offset length bytevector)</b></p>
                   <p><b> (fileWrite fileID bytevector)</b></p>
]]></Expression>
		<Argument>
		  <Name>fileID </Name>
		  <Note><![CDATA[
		  <p>An Integer representing the fileID of the file returned from a previous

            fileOpen function.</p>
          ]]></Note>
		  <AISTypes>Integer</AISTypes>
		</Argument>
		<Argument>
		  <Name>offset</Name>
		  <Note><![CDATA[
		  <p>Optional. The integer index into the specified ByteVector where the 

           data stream is to start . If no offset is specified, the offset defaults to zero.</p>
          ]]></Note>
		  <AISTypes>Integer </AISTypes>
		</Argument>
		<Argument>
		  <Name>length </Name>
		  <Note><![CDATA[
		  <p>Optional. The integer length of data which is to be read into the specified 

            ByteVector. If no length is specified, the length defaults to the length to the 

            end of the file.</p>
          ]]></Note>
		  <AISTypes>Integer</AISTypes>
		</Argument>
		<Argument>
		  <Name>bytevector </Name>
		  <Note><![CDATA[
		  <p>Optional. The ByteVector into which the data is to be written. If no ByteVector 

           is specified, one will be created.</p>
          ]]></Note>
		  <AISTypes>ByteVector</AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>The fileWrite function returns the number bytes written.
        </p>
	    ]]></Return>
	</Syntax>
</Function>
