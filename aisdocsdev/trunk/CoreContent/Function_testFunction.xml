<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>testFunction</Title>
		<FunctionName>testFunction</FunctionName>
		<FunctionType>Builtin</FunctionType>
		<ArgumentTypes>String Text Integer</ArgumentTypes>
		<DataType>Structure  </DataType>
        <RelatedFunctions>right left find substring </RelatedFunctions>
        <RelatedVMInstructions>vmregObjLength vmregStringCompare vmregStringiCompare  </RelatedVMInstructions> 
		<HumanKeywords>substring position left right mid </HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>mid</b> function returns


                 a specified number of characters from a Text or String argument with a

                 specified length and starting from a specified position. </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		<p>The <b>mid</b> function returns a specified number of characters from a Text or String

             argument, with a specified length and starting at a specified character.

        </p>
        ]]></Overview>
        <Usage><![CDATA[
        <p>The <b>mid</b>  function is used to create a substring of a specified length 

           <b>{length}</b> starting from a specified starting position <b>{start}</b>.  

        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p>    (mid  string start length) </p>]]></Expression>
		<Argument>
		  <Name>string</Name>
		  <Note><![CDATA[
		  <p> The Text or String containing the character(s) you want to extract.</p>
          ]]></Note>
		 <AISTypes> String or Text</AISTypes>
		</Argument>
        <Argument>
		  <Name>start</Name>
		  <Note><![CDATA[
		  <p>Any positive integer representing the position of the first 

		  character you want to extract from text. That is, to begin with the 

		  first character in the text, set start to zero, for the second 

		  character, set it equal to one and so on.  

		  If start is greater than the length of text, mid returns the 

		  empty string "".  

          If start is less than the length of text, but exceeds the length 

          of text, mid returns the characters from start to the end of the 

          Text or String. 

          If start is less than 0, mid returns an error code.</p>
          ]]></Note>
		  <AISTypes>Integer</AISTypes>
		</Argument>
		<Argument>
		  <Name>length</Name>
		  <Note><![CDATA[
		  <p> Specifies how many characters to return from Text.

		      If length is negative, mid returns an error code.</p>
          ]]></Note>
		 <AISTypes> Integer</AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>The substring of length <b>{length}</b> starting from the middle

	       character of the String or Text. 

        </p>
	    ]]></Return>
	</Syntax>
</Function>
