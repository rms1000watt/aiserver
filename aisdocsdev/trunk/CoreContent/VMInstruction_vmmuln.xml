<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE VMInstruction SYSTEM "../DTD/VMInstruction.dtd">
<VMInstruction>
	<KnowledgeBase>
	    <Title>vmmuln </Title>
		<InstructionName>vmmuln </InstructionName>
		<InstructionType>Generic</InstructionType>
		<ArgumentTypes>  Number Double    </ArgumentTypes>
		<RelatedVMInstructions>  vmaddn vmdivn  vmsubn  vmdivrn   </RelatedVMInstructions>
		<HumanKeywords>  Number   Addition Subtraction

		                 Multiplication Division </HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[
		<p>When evaluated, this vm instruction multiplies the <b>argument</b> word numeric value 
           to the <b>source</b> word numeric value. The word numeric result is placed in the 
           <b>target</b> word as a Number data type. Both words must be of numeric types. 
           Conversion between different numeric types is automatic. The result will be returned 
           as a Number data type. This instruction may return an Error value. After the operation, 
           the Instruction Pointer is promoted. The operation of this vm instruction is expressed 
           in the following C expression:
        </p>
        <ul><li><b>         (word:double)target = (word:numeric)source * (word:numeric)argument;  </b></li></ul>
    ]]></Description>
    <Example>
        <![CDATA[ <sc> <pre>
			(defun vmmuln_test(arg1 arg2)
    			vars: (c)
    			(vmmuln arg1 arg2 c)
    			(vmreturn c)
			)
			(writeln(vmmuln_test 3.1 10))
        </pre>    </sc>
        ]]>
    </Example>
	<Syntax>
	    <Expression><![CDATA[  (vmmuln argument source target) ]]></Expression>
		<Argument>
		  <Name> argument  </Name>
		  <Format>regoffset  </Format>
		  <AISTypes>(word:numeric)</AISTypes>
		</Argument>
		<Argument>
		  <Name> source </Name>
		  <Format>regoffset </Format>
		  <AISTypes>(word:numeric)</AISTypes>
		</Argument>
		<Argument>
		  <Name>target  </Name>
		  <Format>regoffset  </Format>
		  <AISTypes>(word:double) </AISTypes>
		</Argument>
	</Syntax>
</VMInstruction>
