<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE VMInstruction SYSTEM "../DTD/VMInstruction.dtd">
<VMInstruction>
	<KnowledgeBase>
	    <Title>vmregStringiCompare  </Title> 
		<InstructionName>vmregStringiCompare   </InstructionName>
		<InstructionType>Register</InstructionType>
		<ArgumentTypes> Integer Text String Symbol ByteVector</ArgumentTypes>
		<RelatedVMInstructions>vmregStringCompare</RelatedVMInstructions>
		<HumanKeywords> string case-sensitive compare</HumanKeywords>      
	</KnowledgeBase>                   
	<Description><![CDATA[
		<p>When evaluated, this vm instruction case-sensitive-compares the <b>source</b> 
		ASCI String value with the <b>argument</b> ASCI String value placing 
		the Integer result in the <b>target</b> register. The Integer result, 
		in the <b>target</b> register, will be <i>positive, negative,</i> or 
		<i>zero</i> depending upon whether the <b>source</b> String value is 
		<i>greater than, less than,</i> or <i>equal</i> to the <b>argument</b> 
		String value. Both the <b>source</b> and <b>argument</b> words must 
		be of type <u>Text</u>, <u>String</u>, <u>Symbol</u>, or <u>ByteVector</u>. 
		The <b>source</b> and <b>argument</b> words are assumed to be of the 
		correct types, and no type checking takes place. The result will be 
		returned as a type Integer. This instruction will never return an 
		Error value. After the operation, the Instruction Pointer is promoted. 
		The operation of this vm instruction is expressed in the following C expression:
    	</p>      
        <ul><li><b>    (int)target = stricmp(char*)source,(char*)argument); </b></li></ul>
    ]]></Description>
	<Syntax>
	    <Expression><![CDATA[(vmregStringiCompare source argument target)]]></Expression>
		<Argument> 
		  <Name>source</Name>
		  <Format>regoffset</Format>
		  <AISTypes>String</AISTypes>
		</Argument>	
		<Argument> 
		  <Name>argument</Name>
		  <Format>regoffset</Format>
		  <AISTypes>String</AISTypes>
		</Argument>		 
		<Argument> 
		  <Name>target</Name>
		  <Format>register</Format>
		  <AISTypes>integer</AISTypes>			     
		</Argument>  		 
	</Syntax>
</VMInstruction>
