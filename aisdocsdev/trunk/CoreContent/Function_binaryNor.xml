<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>binaryNor</Title>
		<FunctionName>binaryNor</FunctionName>
		<FunctionType>Builtin(Bitwise)</FunctionType>
		<ArgumentTypes>Integer Character Boolean</ArgumentTypes>
		<DataType>Integer</DataType>
		<RelatedFunctions>binaryNand binaryNxor</RelatedFunctions>
        <RelatedVMInstructions> none   </RelatedVMInstructions>
		<HumanKeywords>numerical nor negative binary</HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>binaryNor</b> function  performs a numerical bitwise nor (<b>nor</b> the arguments and then negate them) on each 
            expression from left to right, returning the value of the result as a binary Integer. </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
	   <p> The <b>binaryNor</b> function  performs a numerical bitwise <b>nor</b> (<b>nor</b> the arguments and then negate them) on each 
            expression from left to right, returning the value of the result as a binary Integer.
           The arguments are assumed to be Integers, and are not checked for the correct type. 
          Characters and Boolean arguments will be treated as Integers in this function. </p>
        ]]></Overview>
        <Usage><![CDATA[
        <p>Use the <b>binaryNor</b> function when a binary integer operation is required. </p>
        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p>(binaryNor exp ...)</p>]]></Expression>
		<Argument> 
		  <Name>exp ...</Name>
		  <Note><![CDATA[
		  <p>One or more Integer expressions.  A Character or Boolean expression is converted to Integer.</p>
          ]]></Note>
		  <AISTypes>Integer Character Boolean </AISTypes>
		</Argument>
		<Return><![CDATA[ 
	    <p>The bitwise Nor (not or) of the argument(s).
        </p>
	    ]]></Return>   
	</Syntax>
</Function>
