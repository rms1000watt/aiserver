<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE VMInstruction SYSTEM "../DTD/VMInstruction.dtd">
<VMInstruction>
	<KnowledgeBase>
	    <Title>vmrefshortvector</Title>
		<InstructionName>vmrefshortvector</InstructionName>
		<InstructionType>Generic</InstructionType>
		<ArgumentTypes> Word Integer ShortVector  </ArgumentTypes>
		<RelatedVMInstructions> vmreffltvector</RelatedVMInstructions>
		<HumanKeywords>fltvector shortvector </HumanKeywords>
	</KnowledgeBase>                   
	<Description><![CDATA[
		<p>When evaluated, this vm instruction assigns the <b>source</b> word, 
		indexed by the <b>index</b> word, into the <b>target</b> word. 
		The source word must contain a ShortVector object. The source, 
		index, and target arguments are mandatory. The source argument word must 
		contain an indexable value. The operation of this vm instruction is expressed 
		in the following C expression:
    	</p>      
        <ul><li><b>  (word)target = (word:ShortVector)source[(int)index];</b></li></ul>
    ]]></Description>
	<Example>
	    <![CDATA[  <sc><pre>
			(defun vmrefshortvector_test( v  index )
    			vars:(z)
    			(vmrefshortvector index v z)
    			(vmreturn z)
			)
			(setq v (new Vector: Short: 5 1 2 3 4 5))
			(writeln (vmrefshortvector_test v 2))
 		</pre>  </sc>
 		]]>
	</Example>
	<Syntax>
	    <Expression><![CDATA[(vmrefshortvector index source target)]]></Expression>
		<Argument> 
		  <Name>index</Name>
		  <Format>regoffset</Format>
		  <AISTypes>integer</AISTypes>
		</Argument>
		<Argument> 
		  <Name>source</Name>
		  <Format>regoffset</Format>
		  <AISTypes>(word:ShortVector)</AISTypes>
		</Argument>
		<Argument> 
		  <Name>target</Name>
		  <Format>regoffset</Format>
		  <AISTypes>word</AISTypes>
		</Argument>
	</Syntax>
</VMInstruction>
