<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE VMInstruction SYSTEM "../DTD/VMInstruction.dtd">
<VMInstruction>
	<KnowledgeBase>
	    <Title>vmmuli</Title>
		<InstructionName>vmmuli</InstructionName>
		<InstructionType>Generic</InstructionType>
		<ArgumentTypes> Number Float Integer Complex</ArgumentTypes>
		<RelatedVMInstructions> vmaddi vmsubi vmdivi vmdivri  </RelatedVMInstructions>
		<HumanKeywords>  addition subtraction multiplication 
		                  division integer</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[                                                  
		<p>When evaluated, this vm instruction multiplies the <b>argument</b> 
		word numeric value to the <b>source</b> word numeric value. The word 
		numeric result is placed in the <b>target</b> word as an Integer data 
		type. Both words must be of numeric types. Conversion between different 
		numeric types is automatic. The result will be returned as an Integer 
		data type. This instruction may return an Error value. After the operation, 
		the Instruction Pointer is promoted. The operation of this vm instruction 
		is expressed in the following C expression:
        </p>	
        <ul><li><b> (word:int)target = (word:numeric)source * (word:numeric)argument;</b></li></ul>
    ]]></Description>
    <Example>
        <![CDATA[  <sc><pre>
			(defun vmmuli_test(arg1 arg2)
    			vars: (c)
    			(vmmuli arg1 arg2 c)
    			(vmreturn c)
			)
			(writeln(vmmuli_test 10 90))
        </pre>      </sc>
        ]]>
    </Example>
	<Syntax>
	    <Expression><![CDATA[  (vmmuli argument source target) ]]></Expression>
		<Argument> 
		  <Name>argument</Name>
		  <Format>regoffset</Format>
		  <AISTypes>(word:numeric)</AISTypes>
		</Argument>
		<Argument> 
		  <Name> source </Name>
		  <Format>regoffset </Format>
		  <AISTypes> (word:numeric) </AISTypes>
		</Argument>
		<Argument> 
		  <Name>target  </Name>
		  <Format>regoffset  </Format>
		  <AISTypes>(word:integer) </AISTypes>
		</Argument>
	</Syntax>
</VMInstruction>
