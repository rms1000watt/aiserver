<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example Number isInexact 001</Title>
		<Template>Example</Template>
		<FunctionKeywords>isInexact</FunctionKeywords>
		<TypeKeywords>  Number</TypeKeywords>
		<RelatedFunctions>isInteger isZero integer isNull isExact isNegative isPositive isOdd isEven   </RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords>  fraction integer inexact exact  </HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[ These examples first check if the arguments can be evaluated as an Integer.
                  Then the <b>isInexact</b> function returns true if the argument has a
                  decimal or fractional part.






 











	]]></Description>
	<Syntax>
  	    <Expression><![CDATA[ <sc>(isInexact  1)            </sc>]]></Expression>
        <Note><![CDATA[none]]></Note>
        <Returns><![CDATA[false]]></Returns>
        <Expression><![CDATA[ <sc>(isInexact  1.0)                 </sc>]]></Expression>
        <Note><![CDATA[none]]></Note>
        <Returns><![CDATA[ false ]]></Returns>
        <Expression><![CDATA[ <sc>(isInexact  -4)                 </sc>]]></Expression>
        <Note><![CDATA[none ]]></Note>
        <Returns><![CDATA[ false ]]></Returns>
        <Expression><![CDATA[ <sc>(isInexact  -4.1)                </sc>]]></Expression>
        <Note><![CDATA[none]]></Note>
        <Returns><![CDATA[ true ]]></Returns>
        <Expression><![CDATA[ <sc>(isInexact  $4.00)                  </sc>]]></Expression>  
        <Note><![CDATA[Money data type is not evaluated as an Integer]]></Note> 
        <Returns><![CDATA[ false ]]></Returns>
        <Expression><![CDATA[ <sc>(isInexact 4.00)                  </sc>]]></Expression>  
        <Note><![CDATA[none]]></Note> 
        <Returns><![CDATA[ false ]]></Returns>
        <Hints><![CDATA[none]]></Hints>
   </Syntax>
</Example>
