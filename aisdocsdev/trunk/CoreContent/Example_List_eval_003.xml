<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example List eval 003</Title>
		<Template>Example</Template>
		<FunctionKeywords>eval</FunctionKeywords>
		<TypeKeywords>Pair List</TypeKeywords>
		<RelatedFunctions>compile morph lisp</RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords>compile evaluation morph parse Lambda</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[ When the input to eval is a quoted list, invoking eval is equivalent to 
               reducing the quote count by one as shown in this example.	              


	]]></Description>
	<Syntax>
  	    <Expression><![CDATA[ <sc>(eval  ''(+ 1 2 3))        </sc>]]></Expression>
        <Note><![CDATA[none]]></Note>
        <Returns><![CDATA[#&#60Pair 123456&#62]]></Returns>
  	    <Expression><![CDATA[ <sc>(display #&#60Pair 123456&#62)     </sc>]]></Expression>  
        <Note><![CDATA[none]]></Note> 
        <Returns><![CDATA[(+ 1 2 3)]]></Returns>
  	    <Expression><![CDATA[ <sc>(eval  (eval  ''(+ 1 2 3)))       </sc>]]></Expression>  
        <Note><![CDATA[none]]></Note> 
        <Returns><![CDATA[6]]></Returns>
        <Hints><![CDATA[<p>
If the <b>eval</b> function is passed a List as an argument, it is assumed
           that lexing has already taken place. Furthermore, the List must be the type returned
           by <b> _parser</b>, which is a List enclosed within a List.</p>
        ]]></Hints>
   </Syntax>
</Example>
