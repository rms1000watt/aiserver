<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>findBlock</Title>
		<FunctionName>findBlock</FunctionName>
		<FunctionType>Builtin</FunctionType>
        <ArgumentTypes> Vector BitVector Integer Boolean</ArgumentTypes>
        <DataType> BitVector</DataType>
	    <RelatedFunctions>freeBlock setBlock cdr</RelatedFunctions>
        <RelatedVMInstructions> vmsetnumvector vmsetintvector vmsetvector  </RelatedVMInstructions>
		<HumanKeywords>bits available free block locate space
                       disk space memory management </HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>findBlock</b> function returns the bit index value for the first available 
                 block of the specified length. </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		<p>The  <b>findBlock</b> function returns the bit index value for the first available 
           block of the specified length. Vacant blocks are represented by 0 bits, 
           while occupied blocks are represented by 1 bits. </p>
        <p>For example: </p>
        <p><b><blockquote> (setq myBlock (findBlock bitVector 3))  </blockquote> </b>
</p>
        <p>The above <b>findBlock</b> invocation returns the bit index of the first vacant block 
           (which is immediately followed by two other vacant blocks). If there do not exist 
            three vacant blocks immediately adjacent anywhere within the bit vector, then 
            false is returned.</p>
        ]]></Overview>
       <Usage><![CDATA[
        <p>The <b>findBlock</b> function is used to locate free block space in a BitVector 
           used to manage a memory space or disk space.
		</p>
        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p>      (findBlock  bitVector  blockCount) </p>
]]></Expression>
		<Argument>
		  <Name>bitVector</Name>
		  <Note><![CDATA[
		  <p>The BitVector in which a vacant block is to be found.</p>
          ]]></Note>
		  <AISTypes>BitVector </AISTypes>
		</Argument>
     	<Argument>
		  <Name>blockCount</Name>
		  <Note><![CDATA[
		  <p>The number of consecutive vacant blocks to be found</p>
          ]]></Note>
		  <AISTypes>Integer</AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>The bit index of the first vacant block, or false if none found.
        </p>
	    ]]></Return>
	</Syntax>
</Function>
