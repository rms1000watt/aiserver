<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>compile</Title>
		<FunctionName>compile</FunctionName>
		<FunctionType>Builtin</FunctionType>
		<ArgumentTypes>Lambda List Boolean</ArgumentTypes>
        <DataType> List Lambda</DataType>
		<RelatedFunctions>eval morph lisp</RelatedFunctions>
        <RelatedVMInstructions>   </RelatedVMInstructions> 
		<HumanKeywords>compile evaluation morph parse Lambda</HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>compile</b> function compiles the Analytic Information Server generic parse tree 
                    argument (normally output from morph) and returns an Lambda object. </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		<p>The <b>compile</b> compiles the Analytic Information Server generic parse tree <b>{parseTree}</b> 
            argument (normally output from <b>morph</b>) and returns an Lambda object. If the optional <b>{anLambda}</b> argument is passed, 
           it becomes the target of the compilation and is returned; otherwise, a new Lambda object is returned. If the optional <b>true</b> argument is passed, 
            the compilation always inherits the persistent variables of the <b>{anLambda}</b> argument.
        </p>
        ]]></Overview>
        <Usage><![CDATA[
        <p>Use the <b>compile</b> when producing an Lambda from a parse tree is required. Normally, a 
           three step process will compile Lisp source: <b>lisp</b>, followed by <b>morph</b>, followed by <b>compile</b>.

        </p>
        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p>  (compile  parseTree)</p>
                   <p>   (compile  parseTree anLambda)</p>
                   <p>   (compile  parseTree anLambda true)</p>]]></Expression>
		<Argument>
		  <Name>parseTree</Name>
		  <Note><![CDATA[
		  <p> An Analytic Information Server generic parse tree (normally output from morph)</p>
          ]]></Note>
		  <AISTypes>---</AISTypes>
		</Argument>
		<Argument> 
		  <Name>anLambda</Name>
		  <Note><![CDATA[
		  <p> Optional Argument. If present, it specifies the target (Lambda) of the compilation. 
              not present,  a new Lambda object is returned.</p>
          ]]></Note>
		  <AISTypes>Lambda</AISTypes>
		</Argument>
		<Argument> 
		  <Name>true</Name>
		  <Note><![CDATA[
		  <p> Optional Argument. If present, the compilation will inherit the persistent variable 
             of the {anLambda} argument.</p>
          ]]></Note>
		  <AISTypes>Boolean</AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>An Analytic Information Server Lambda object

        </p>
	    ]]></Return>
	</Syntax>
</Function>
