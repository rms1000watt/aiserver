<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Example SYSTEM "../DTD/Example.dtd">
<Example>
	<KnowledgeBase>
		<Title>Example Symbol type 002</Title>
		<Template>Example</Template>
		<FunctionKeywords>type</FunctionKeywords>
		<TypeKeywords>Character String Symbol Vector BitVector ByteVector IntVector






                       FltVector ObjVector Structure Dictionary Directory






                       Matrix NumMatrix Integer Float Number Complex</TypeKeywords>
		<RelatedFunctions>isText isSymbol isObject isString isType</RelatedFunctions>
		<Language>Lisp</Language>
		<HumanKeywords>Type Analytic Object</HumanKeywords>
	</KnowledgeBase>
	<Description><![CDATA[ These examples show how the <b>type</b> function returns the

                  symbolic name of the data type of the AIS Object evaluated.





	]]></Description>
	<Syntax>
  	    <Expression><![CDATA[ <sc>(type (new Symbol:  "Minnie") )    </sc>]]></Expression>
        <Note><![CDATA[The object is of type Symbol.]]></Note>
        <Returns><![CDATA[Symbol]]></Returns>
        <Expression><![CDATA[ <sc>(setq d (new Symbol:  "Donald Duck")) </sc>]]></Expression>
        <Note><![CDATA[none]]></Note>
        <Returns><![CDATA[ Donald Duck ]]></Returns>
        <Expression><![CDATA[ <sc>(type d)   </sc>]]></Expression>
        <Note><![CDATA[none ]]></Note>
        <Returns><![CDATA[ Symbol ]]></Returns>
        <Hints><![CDATA[none]]></Hints>
   </Syntax>
</Example>
