<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE Function SYSTEM "../DTD/Function.dtd">
<Function>
	<KnowledgeBase>
        <Title>setBlock</Title>
		<FunctionName>setBlock</FunctionName>
		<FunctionType>Builtin</FunctionType>
        <ArgumentTypes> Vector BitVector Integer Boolean</ArgumentTypes>
        <DataType> BitVector</DataType>
	    <RelatedFunctions>freeBlock findBlock</RelatedFunctions>
        <RelatedVMInstructions> vmsetnumvector vmsetintvector vmsetvector </RelatedVMInstructions>
		<HumanKeywords>bits available free block locate space

                       disk space memory management </HumanKeywords>
	</KnowledgeBase>
         <Description><![CDATA[
             <p> The <b>setBlock</b> function sets the specified blocks to be occupied 
                 in the Bit Vector.  </p>
          ]]></Description>
	<Brief>
	   <Overview><![CDATA[
		<p>The  <b>setBlock</b> function sets the specified blocks to occupied in the Bit Vector. 
           Vacant blocks are represented by 0 bits, while occupied blocks are represented by 
           1 bits. </p>
        <p>For example: </p>
        <p><b><blockquote> (setBlock bitVector i 3)  </blockquote> </b>
</p>
        <p>The above freeBlock invocation sets the 3 blocks (starting at bit index i) to be occupied. After this invocation:</p>
        <p><b><blockquote> bitVector[i] = 1  </blockquote> </b></p>
        <p><b><blockquote> bitVector[(+ i 1)] = 1  </blockquote> </b></p>
        <p><b><blockquote> bitVector[(+ i 2)] = 1  </blockquote> </b></p>
        ]]></Overview>
       <Usage><![CDATA[
        <p>The <b>setBlock</b> function is used to allocate block space in a BitVector used to 
           manage a memory space or disk space.
		</p>
        ]]></Usage>
    </Brief>
	<Syntax>
	    <Expression><![CDATA[<p>(setBlock  bitVector  blockIndex blockCount) </p>
]]></Expression>
		<Argument>
		  <Name>bitVector</Name>
		  <Note><![CDATA[
		  <p>The BitVector in which a consecutive string of blocks to be set occupied.</p>
          ]]></Note>
		  <AISTypes>BitVector </AISTypes>
		</Argument>
     	<Argument>
		  <Name>blockIndex</Name>
		  <Note><![CDATA[
		  <p>The starting bit index of the consecutive string of blocks to be set occupied.</p>
          ]]></Note>
		  <AISTypes>Integer</AISTypes>
		</Argument>
    	<Argument> 
		  <Name>blockCount</Name>
		  <Note><![CDATA[
		  <p>The number of consecutive blocks to be set occupied.</p>
          ]]></Note>
		  <AISTypes>Integer</AISTypes>
		</Argument>
		<Return><![CDATA[
	    <p>The block index after the last occupied block.
        </p>
	    ]]></Return>
	</Syntax>
</Function>
